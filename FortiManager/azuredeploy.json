{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "location - same as above"
      }
    },
    "FortiManagerName": {
      "type": "string",
      "metadata": {
        "description": "Name for FortiManager virtual appliance."
      }
    },
    "instanceType": {
      "type": "string",
      "defaultValue": "Standard_F2"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the FortiManager virtual appliance."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the FortiManager virtual appliance."
      }
    },
    "FortiManagerImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Select image version"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "Existing",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a new or existing vnet"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
      }
    },
    "vnetAddressPrefixes": {
      "type": "array"
    },
    "subnetName": {
      "type": "string"
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Prefix in CIDR notation, example: 10.2.1.0/24"
      }
    },
    "publicIPNewOrExistingOrNone": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Identify if to use a public IP and if so whether it is new"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "uselessStringInCaseNone",
      "metadata": {
        "description": "Name of Public IP address resource."
      }
    },
    "publicIPAddressType": {
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address - A 'dynamic' address will change during reboot or periods of inactivity"
      },
      "type": "string"
    },
    "publicIPResourceGroup": {
      "type": "string",
      "defaultValue": "uselessStringInCaseNone",
      "metadata": {
        "description": "Resource Group containing the public IP - or new resource group from above (if new public IP)"
      }
    },
    "FortinetTags": {
      "type": "object",
      "defaultValue": {
        "provider": "6EB3B02F-50E5-4A3E-8CB8-2E129258317D"
      }
    },
    "ArtifactsBaseURI": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/itsmine1986/FortiManager/master/FortiManager/nested%20template",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    },
    "availabilitySets": {
      "type": "string",
      "minLength": 1
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('subnetName'))]",
    "publicIpAddressId": {
      "id": "[resourceId(parameters('publicIPResourceGroup'), 'Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
    },
    "publicIPID": "[resourceId(parameters('publicIPResourceGroup'), 'Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
    "NSGName": "NgPNtwkA01",
    "networkInterfaceName": "[concat('Nc',parameters('FortiManagerName'),'01')]",
    "updateIPURI": "[concat(parameters('ArtifactsBaseURI'),'/update-nic.json')]"
  },
  "resources": [
    {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'Existing')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-09-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('vnetAddressPrefixes')]"
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('publicIPNewOrExistingOrNone'), 'None')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-09-01",
      "tags": {
        "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "name": "[parameters('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2017-09-01",
      "tags": {
        "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('NSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowSSHInbound",
            "properties": {
              "description": "Allow SSH In",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHTTPInbound",
            "properties": {
              "description": "Allow 80 In",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHTTPSInbound",
            "properties": {
              "description": "Allow 443 In",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowDevRegInbound",
            "properties": {
              "description": "Allow 514 in for device registration",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "514",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAllOutbound",
            "properties": {
              "description": "AllowOut",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-09-01",
      "dependsOn": [
        "[variables('NSGName')]",
        "[parameters('vnetName')]",
        "[parameters('publicIPAddressName')]"
      ],
      "tags": {
        "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('Nc',parameters('FortiManagerName'),'01IP')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "publicIPAddress": "[if(not(equals(parameters('publicIpNewOrExistingOrNone'), 'none')), variables('publicIpAddressId') , json('null'))]"
            }
          }
        ],
        "enableIPForwarding": false
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "UpdateNIC",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('networkInterfaceName')]"
      ],
      "tags": {
        "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updateIPURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('networkInterfaceName')]"
          },
          "SubnetRef": {
            "value": "[variables('subnetRef')]"
          },
          "privateIp": {
            "value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))).ipConfigurations[0].properties.privateIPAddress]"
          },
          "publicIPID": {
            "value": "[variables('publicIPID')]"
          },
          "publicIPNewOrExistingOrNone": {
            "value": "[parameters('publicIPNewOrExistingOrNone')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "FortinetTags": {
            "value": "[parameters('FortinetTags')]"
          }
        }
      }
    },
    {
      "name": "[parameters('FortiManagerName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "tags": {
        "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('networkInterfaceName')]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('FortiManagerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets/', parameters('availabilitySets'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet-fortimanager",
            "sku": "fortinet-fortimanager",
            "version": "[parameters('FortiManagerImageVersion')]"
          },
          "osDisk": {
            "name": "MdOVMXPNTWKA01I01",
            "createOption": "FromImage",
            "diskSizeGB": 100
          },
          "dataDisks": [
            {
              "name": "MdDVMXPNTWKA01I01",
              "createOption": "Empty",
              "diskSizeGB": 100,
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      },
      "plan": {
        "name": "fortinet-fortimanager",
        "publisher": "fortinet",
        "product": "fortinet-fortimanager"
      }
    },
    {
      "name": "[parameters('availabilitySets')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-12-01",
      "dependsOn": [],
      "sku": {
        "name": "Aligned"
      },
      "tags": {
        "Application Service": "NtwkA",
        "provider": "[toUpper(parameters('FortinetTags').provider)]",
        "Deployment": "ARM",
        "Environment": "Prod"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2
      }
    }
  ]
}